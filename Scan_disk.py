import os
import hashlib
import ctypes
import sys


def calculate_sha256(file_path):
    sha256 = hashlib.sha256()
    try:
        with open(file_path, 'rb') as file:
            while chunk := file.read(8192):
                sha256.update(chunk)
    except PermissionError:
        print(f"PermissionError: Permission denied for file: {file_path}")
    except Exception as e:
        print(f"Error processing file {file_path}: {str(e)}")
    return sha256.hexdigest()

def compare_hashes(result_file_path, hash_list_file):
    with open(hash_list_file, 'r') as hash_file:
        hash_list = [line.strip() for line in hash_file]

    with open(result_file_path, 'w') as result_file:
        for root, dirs, files in os.walk(r'C:\Users\Titou\Documents\GitHub\projet-malware'):
            for file in files:
                file_path = os.path.join(root, file)
                if os.path.isfile(file_path):
                    file_hash = calculate_sha256(file_path)
                    if file_hash in hash_list:
                        result_file.write(f"Match: {file_path}\n")

if __name__ == "__main__":
    hash_list_file = 'full_sha256.txt'
    result_file_path = 'matches.txt'

    compare_hashes(result_file_path, hash_list_file)

    print(f"Analysis completed. Results are saved in '{result_file_path}'.")

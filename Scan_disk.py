import os
import hashlib

def calculate_file_hash(file_path, block_size=65536):
    hasher = hashlib.sha256()
    with open(file_path, 'rb') as file:
        buffer = file.read(block_size)
        while len(buffer) > 0:
            hasher.update(buffer)
            buffer = file.read(block_size)
    return hasher.hexdigest()

def compare_hashes(file_path, hash_database_path):
    file_hash = calculate_file_hash(file_path)

    with open(hash_database_path, 'r') as hash_database:
        for line in hash_database:
            stored_hash = line.strip()
            if file_hash == stored_hash:
                return True

    return False

def analyze_files(directory, hash_database_path):
    for root, dirs, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            if compare_hashes(file_path, hash_database_path):
                print(f"File '{file_path}' has a matching hash in the database.")

# Specify the directory to analyze (C: drive) and the path to the hash database file
directory_to_analyze = "C:\\"
hash_database_path = "path_to_hash_database.txt"

# Perform the analysis
analyze_files(directory_to_analyze, hash_database_path)
